name: Deploy to Cloud Run

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: ${{ secrets.GCP_REGION }}
  REGISTRY: us-central1-docker.pkg.dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: env
    strategy:
      matrix:
        service: [fileuploader, htmlextractor, HTMLToEpub]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Google Cloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Docker
        run: |
          gcloud auth configure-docker ${{ env.REGISTRY }}

      - name: Build and Push Docker Image
        run: |
          # Build image
          docker build -t ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/my-monorepo/${{ matrix.service }}:${{ github.sha }} ./${{ matrix.service }}/
          
          # Tag as latest for main branch
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            docker tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/my-monorepo/${{ matrix.service }}:${{ github.sha }} ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/my-monorepo/${{ matrix.service }}:latest
            docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/my-monorepo/${{ matrix.service }}:latest
          fi
          
          # Push image
          docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/my-monorepo/${{ matrix.service }}:${{ github.sha }}

      - name: Deploy to Cloud Run
        if: github.ref == 'refs/heads/main'
        run: |
          gcloud run deploy ${{ matrix.service }} \
            --image=${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/my-monorepo/${{ matrix.service }}:${{ github.sha }} \
            --region=${{ env.GCP_REGION }} \
            --platform=managed \
            --allow-unauthenticated \
            --port=8080 \
            --memory=512Mi \
            --cpu=1 \
            --min-instances=0 \
            --max-instances=10 \
            --set-env-vars="ENV=production"

  notify:
    if: always()
    needs: [build-and-deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Deployment Summary
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ needs.build-and-deploy.result }}" >> $GITHUB_STEP_SUMMARY